(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{546:function(t,s,a){"use strict";a.r(s);var e=a(3),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"【基础02】如何获取vue的根组件vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【基础02】如何获取vue的根组件vm"}},[t._v("#")]),t._v(" 【基础02】如何获取Vue的根组件vm")]),t._v(" "),a("p",[t._v("当你使用"),a("code",[t._v("creatApp()")]),t._v("方法创建了一个Vue应用时，如何能获取根组件那?其实你使用"),a("code",[t._v("mount()")]),t._v("方法时，就会返回根组件。下面的代码，声明一个变量来获取根组件，并打印出来。通过打印你可以看出根组件是一个"),a("code",[t._v("Proxy")]),t._v("形式的对象。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这里为什么我把根组件起名为"),a("code",[t._v("vm")]),t._v("那？我先按下不表，我们先来了解一下"),a("code",[t._v("Vue")]),t._v("的设计模式。")]),t._v(" "),a("h3",{attrs:{id:"mvvm设计模式讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm设计模式讲解"}},[t._v("#")]),t._v(" mvvm设计模式讲解")]),t._v(" "),a("p",[t._v("Vue的编程设计模式应该叫做"),a("code",[t._v("mvvm")]),t._v("的设计模式。什么叫做"),a("code",[t._v("mvvm")]),t._v("哪？它首先是面向数据的编程，程序中定义了数据，然后定义了模板，"),a("code",[t._v("Vue")]),t._v("就可以把数据和模板自动进行关联。最后挂载到真实的"),a("code",[t._v("DOM")]),t._v("上，展示给用户。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("mvvm解释: 第一个"),a("code",[t._v("m")]),t._v("代表"),a("code",[t._v("model")]),t._v("数据，第一个"),a("code",[t._v("v")]),t._v("代表"),a("code",[t._v("view")]),t._v("视图，最后两个字幕"),a("code",[t._v("vm")]),t._v("代表"),a("code",[t._v("viewModel")]),t._v("视图数据连接层。")])]),a("p",[t._v("这个解释还不太明白，我们可以看一下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'陈叔叔'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.在这里定义了数据，也就是`model`数据")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<h2>{{message}}</h2>"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.在这里定义了模板，也就是`view`，")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义后的自动关联，就叫做`vm`，viewModel数据视图连接层。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("code",[t._v("model")]),t._v("数据，是我们自己定义的，"),a("code",[t._v("view")]),t._v("模板也是我们自己定义的，但是"),a("code",[t._v("vm")]),t._v("是Vue自动给我们关联的。")]),t._v(" "),a("p",[t._v("当我们明白了什么是"),a("code",[t._v("mvvm")]),t._v("后，你就知道为什么我们给根组件起名"),a("code",[t._v("vm")]),t._v("了。")]),t._v(" "),a("p",[t._v("当我们获取了"),a("code",[t._v("vm")]),t._v("根节点后，其实就可以操作里边的数据了。比如在控制台中输入下面的代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'陈叔叔来了'")]),t._v("\n")])])]),a("p",[t._v("这个时候你会发现网页界面也跟着发生了变化，变成了 陈叔叔来了")])])}),[],!1,null,null,null);s.default=n.exports}}]);